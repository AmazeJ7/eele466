-- -------------------------------------------------------------
-- 

-- File Name: C:\466\JG\Lab3\hdl_coder_Madgwick_update\codegen\Madgwick_update\hdlsrc\Madgwick_update_fixpt.vhd
-- Created: 2018-02-06 13:34:46
-- 
-- Generated by MATLAB 9.3, MATLAB Coder 3.4 and HDL Coder 3.11
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- q0                            ce_out        1
-- q1                            ce_out        1
-- q2                            ce_out        1
-- q3                            ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Madgwick_update_fixpt
-- Source Path: Madgwick_update_fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Madgwick_update_fixpt IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        q0_1                              :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
        q1_1                              :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
        q2_1                              :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
        q3_1                              :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
        qdot1_1                           :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En7
        qdot2_1                           :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En7
        qdot3_1                           :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En7
        qdot4_1                           :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En7
        s0                                :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En7
        s1                                :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En7
        s2                                :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En7
        s3                                :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En7
        beta_1                            :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En17
        sampletime_1                      :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En22
        ce_out                            :   OUT   std_logic;
        q0                                :   OUT   std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
        q1                                :   OUT   std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
        q2                                :   OUT   std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
        q3                                :   OUT   std_logic_vector(13 DOWNTO 0)  -- sfix14_En12
        );
END Madgwick_update_fixpt;


ARCHITECTURE rtl OF Madgwick_update_fixpt IS

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL q0_1_signed                      : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL tmp                              : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL qdot1_1_signed                   : signed(13 DOWNTO 0);  -- sfix14_En7
  SIGNAL tmp_1                            : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL s0_signed                        : signed(13 DOWNTO 0);  -- sfix14_En7
  SIGNAL tmp_2                            : signed(27 DOWNTO 0);  -- sfix28_En24
  SIGNAL p83tmp_mul_temp                  : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL tmp_3                            : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_4                            : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_5                            : signed(13 DOWNTO 0);  -- sfix14_En7
  SIGNAL tmp_6                            : signed(27 DOWNTO 0);  -- sfix28_En29
  SIGNAL p75tmp_cast                      : signed(28 DOWNTO 0);  -- sfix29_En29
  SIGNAL tmp_7                            : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL tmp_8                            : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL tmp_9                            : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL q0_tmp                           : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL q1_1_signed                      : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL tmp_10                           : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL qdot2_1_signed                   : signed(13 DOWNTO 0);  -- sfix14_En7
  SIGNAL tmp_11                           : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL s1_signed                        : signed(13 DOWNTO 0);  -- sfix14_En7
  SIGNAL tmp_12                           : signed(27 DOWNTO 0);  -- sfix28_En24
  SIGNAL p81tmp_mul_temp                  : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL tmp_13                           : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_14                           : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_15                           : signed(13 DOWNTO 0);  -- sfix14_En7
  SIGNAL tmp_16                           : signed(27 DOWNTO 0);  -- sfix28_En29
  SIGNAL p74tmp_cast                      : signed(28 DOWNTO 0);  -- sfix29_En29
  SIGNAL tmp_17                           : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL tmp_18                           : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL tmp_19                           : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL q1_tmp                           : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL q2_1_signed                      : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL tmp_20                           : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL qdot3_1_signed                   : signed(13 DOWNTO 0);  -- sfix14_En7
  SIGNAL tmp_21                           : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL s2_signed                        : signed(13 DOWNTO 0);  -- sfix14_En7
  SIGNAL tmp_22                           : signed(27 DOWNTO 0);  -- sfix28_En24
  SIGNAL p79tmp_mul_temp                  : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL tmp_23                           : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_24                           : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_25                           : signed(13 DOWNTO 0);  -- sfix14_En7
  SIGNAL tmp_26                           : signed(27 DOWNTO 0);  -- sfix28_En29
  SIGNAL p73tmp_cast                      : signed(28 DOWNTO 0);  -- sfix29_En29
  SIGNAL tmp_27                           : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL tmp_28                           : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL tmp_29                           : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL q2_tmp                           : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL q3_1_signed                      : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL tmp_30                           : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL qdot4_1_signed                   : signed(13 DOWNTO 0);  -- sfix14_En7
  SIGNAL tmp_31                           : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL s3_signed                        : signed(13 DOWNTO 0);  -- sfix14_En7
  SIGNAL tmp_32                           : signed(27 DOWNTO 0);  -- sfix28_En24
  SIGNAL p77tmp_mul_temp                  : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL tmp_33                           : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_34                           : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_35                           : signed(13 DOWNTO 0);  -- sfix14_En7
  SIGNAL tmp_36                           : signed(27 DOWNTO 0);  -- sfix28_En29
  SIGNAL p72tmp_cast                      : signed(28 DOWNTO 0);  -- sfix29_En29
  SIGNAL tmp_37                           : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL tmp_38                           : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL tmp_39                           : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL q3_tmp                           : signed(13 DOWNTO 0);  -- sfix14_En12

BEGIN
  -- HDL code generation from MATLAB function: Madgwick_update_fixpt
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- 
  --                                                                          %
  -- 
  --           Generated by MATLAB 9.3 and Fixed-Point Designer 6.0           %
  -- 
  --                                                                          %
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- 
  -- 'Madgwick_update_fixpt:8' fm = get_fimath();
  -- 
  -- 'Madgwick_update_fixpt:9' beta = fi(beta_1, 0, 14, 17, fm);
  -- 
  -- 'Madgwick_update_fixpt:10' q0 = fi(q0_1, 1, 14, 12, fm);
  q0_1_signed <= signed(q0_1);

  -- Integrate rate of change of quaternion to yield quaternion
  -- 
  -- 'Madgwick_update_fixpt:32' q0 = fi(q0 + qDot1 * sampleTime, 1, 14, 12, fm);
  tmp <= resize(q0_1_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0' & '0' & '0' & '0', 32);

  -- 'Madgwick_update_fixpt:14' qDot1 = fi(qDot1_1, 1, 14, 7, fm);
  qdot1_1_signed <= signed(qdot1_1);

  -- 'Madgwick_update_fixpt:18' sampleTime = fi(sampleTime_1, 0, 14, 22, fm);
  -- 
  -- 'Madgwick_update_fixpt:20' sampleFreq	= fi(512.0, 0, 10, 0, fm);
  -- 
  -- sample frequency in Hz
  -- 
  -- 'Madgwick_update_fixpt:21' sampleTime    = fi(fi_div(fi(1, 0, 1, 0, fm), sampleFreq), 0, 14, 22, fm);
  -- 
  -- 'Madgwick_update_fixpt:22' betaDef		= fi(0.1, 0, 14, 17, fm);
  -- 
  -- 2 * proportional gain
  -- 
  -- 'Madgwick_update_fixpt:23' beta = fi(betaDef, 0, 14, 17, fm);
  -- 
  -- 2 * proportional gain (Kp)
  -- 
  -- Apply feedback step
  -- 
  -- 'Madgwick_update_fixpt:26' qDot1 = fi(qDot1 - beta * s0, 1, 14, 7, fm);
  tmp_1 <= resize(qdot1_1_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0' & '0' & '0' & '0' & '0', 32);

  s0_signed <= signed(s0);

  p83tmp_mul_temp <= to_signed(16#3333#, 15) * s0_signed;
  tmp_2 <= p83tmp_mul_temp(27 DOWNTO 0);

  tmp_3 <= resize(tmp_2, 32);

  tmp_4 <= tmp_1 - tmp_3;

  tmp_5 <= tmp_4(30 DOWNTO 17);

  p75tmp_cast <= resize(tmp_5 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 
    29);
  tmp_6 <= p75tmp_cast(27 DOWNTO 0);

  tmp_7 <= resize(tmp_6, 32);

  tmp_8 <= tmp + tmp_7;

  tmp_9 <= tmp_8(30 DOWNTO 17);

  enb <= clk_enable;

  q0_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      q0_tmp <= to_signed(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        q0_tmp <= tmp_9;
      END IF;
    END IF;
  END PROCESS q0_reg_process;


  q0 <= std_logic_vector(q0_tmp);

  -- 'Madgwick_update_fixpt:11' q1 = fi(q1_1, 1, 14, 12, fm);
  q1_1_signed <= signed(q1_1);

  -- 'Madgwick_update_fixpt:33' q1 = fi(q1 + qDot2 * sampleTime, 1, 14, 12, fm);
  tmp_10 <= resize(q1_1_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
    & '0' & '0' & '0' & '0', 32);

  -- 'Madgwick_update_fixpt:15' qDot2 = fi(qDot2_1, 1, 14, 7, fm);
  qdot2_1_signed <= signed(qdot2_1);

  -- 'Madgwick_update_fixpt:27' qDot2 = fi(qDot2 - beta * s1, 1, 14, 7, fm);
  tmp_11 <= resize(qdot2_1_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0' & '0' & '0' & '0' & '0', 32);

  s1_signed <= signed(s1);

  p81tmp_mul_temp <= to_signed(16#3333#, 15) * s1_signed;
  tmp_12 <= p81tmp_mul_temp(27 DOWNTO 0);

  tmp_13 <= resize(tmp_12, 32);

  tmp_14 <= tmp_11 - tmp_13;

  tmp_15 <= tmp_14(30 DOWNTO 17);

  p74tmp_cast <= resize(tmp_15 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 
    29);
  tmp_16 <= p74tmp_cast(27 DOWNTO 0);

  tmp_17 <= resize(tmp_16, 32);

  tmp_18 <= tmp_10 + tmp_17;

  tmp_19 <= tmp_18(30 DOWNTO 17);

  q1_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      q1_tmp <= to_signed(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        q1_tmp <= tmp_19;
      END IF;
    END IF;
  END PROCESS q1_reg_process;


  q1 <= std_logic_vector(q1_tmp);

  -- 'Madgwick_update_fixpt:12' q2 = fi(q2_1, 1, 14, 12, fm);
  q2_1_signed <= signed(q2_1);

  -- 'Madgwick_update_fixpt:34' q2 = fi(q2 + qDot3 * sampleTime, 1, 14, 12, fm);
  tmp_20 <= resize(q2_1_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
    & '0' & '0' & '0' & '0', 32);

  -- 'Madgwick_update_fixpt:16' qDot3 = fi(qDot3_1, 1, 14, 7, fm);
  qdot3_1_signed <= signed(qdot3_1);

  -- 'Madgwick_update_fixpt:28' qDot3 = fi(qDot3 - beta * s2, 1, 14, 7, fm);
  tmp_21 <= resize(qdot3_1_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0' & '0' & '0' & '0' & '0', 32);

  s2_signed <= signed(s2);

  p79tmp_mul_temp <= to_signed(16#3333#, 15) * s2_signed;
  tmp_22 <= p79tmp_mul_temp(27 DOWNTO 0);

  tmp_23 <= resize(tmp_22, 32);

  tmp_24 <= tmp_21 - tmp_23;

  tmp_25 <= tmp_24(30 DOWNTO 17);

  p73tmp_cast <= resize(tmp_25 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 
    29);
  tmp_26 <= p73tmp_cast(27 DOWNTO 0);

  tmp_27 <= resize(tmp_26, 32);

  tmp_28 <= tmp_20 + tmp_27;

  tmp_29 <= tmp_28(30 DOWNTO 17);

  q2_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      q2_tmp <= to_signed(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        q2_tmp <= tmp_29;
      END IF;
    END IF;
  END PROCESS q2_reg_process;


  q2 <= std_logic_vector(q2_tmp);

  -- 'Madgwick_update_fixpt:13' q3 = fi(q3_1, 1, 14, 12, fm);
  q3_1_signed <= signed(q3_1);

  -- 'Madgwick_update_fixpt:35' q3 = fi(q3 + qDot4 * sampleTime, 1, 14, 12, fm);
  tmp_30 <= resize(q3_1_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' 
    & '0' & '0' & '0' & '0', 32);

  -- 'Madgwick_update_fixpt:17' qDot4 = fi(qDot4_1, 1, 14, 7, fm);
  qdot4_1_signed <= signed(qdot4_1);

  -- 'Madgwick_update_fixpt:29' qDot4 = fi(qDot4 - beta * s3, 1, 14, 7, fm);
  tmp_31 <= resize(qdot4_1_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0' & '0' & '0' & '0' & '0', 32);

  s3_signed <= signed(s3);

  p77tmp_mul_temp <= to_signed(16#3333#, 15) * s3_signed;
  tmp_32 <= p77tmp_mul_temp(27 DOWNTO 0);

  tmp_33 <= resize(tmp_32, 32);

  tmp_34 <= tmp_31 - tmp_33;

  tmp_35 <= tmp_34(30 DOWNTO 17);

  p72tmp_cast <= resize(tmp_35 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 
    29);
  tmp_36 <= p72tmp_cast(27 DOWNTO 0);

  tmp_37 <= resize(tmp_36, 32);

  tmp_38 <= tmp_30 + tmp_37;

  tmp_39 <= tmp_38(30 DOWNTO 17);

  q3_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      q3_tmp <= to_signed(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        q3_tmp <= tmp_39;
      END IF;
    END IF;
  END PROCESS q3_reg_process;


  q3 <= std_logic_vector(q3_tmp);

  ce_out <= clk_enable;

END rtl;

